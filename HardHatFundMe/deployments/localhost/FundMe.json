{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_ACCEPTABLE_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0b398867acb415790f073519b16afc8af70ea4edd685c429a59a28374027d41a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "918919",
    "logsBloom": "0x
    "blockHash": "0xe4bb5b66c7ca1c1976ce47a46b2cad6ad8ce48c2536c64abbf968e2cd84fdbfb",
    "transactionHash": "0x0b398867acb415790f073519b16afc8af70ea4edd685c429a59a28374027d41a",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "918919",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "8ae3335ce4b747696d1305cc2e94aa9d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_ACCEPTABLE_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    address private immutable i_owner;\\r\\n    uint256 public constant MIN_ACCEPTABLE_VALUE = 1 * 1e18;\\r\\n    address[] private funders;\\r\\n    mapping(address => uint256) private addressToAmountFunded;\\r\\n    AggregatorV3Interface private priceFeed;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversionRate(priceFeed) >= MIN_ACCEPTABLE_VALUE,\\r\\n            \\\"Didn't Send Enough!!..\\\"\\r\\n        );\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] += msg.value;\\r\\n    }\\r\\n\\r\\n    // function withdraw() public onlyOwner {\\r\\n    //     for (uint256 i = 0; i < funders.length; i++) {\\r\\n    //         addressToAmountFunded[funders[i]] = 0;\\r\\n    //     }\\r\\n\\r\\n    //     funders = new address[](0);\\r\\n\\r\\n    //     (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n    //     require(success,\\\"Withdraw Failed!\\\");\\r\\n    // }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        address[] memory m_funders = funders;\\r\\n        for (uint256 i = 0; i < m_funders.length; i++) {\\r\\n            addressToAmountFunded[m_funders[i]] = 0;\\r\\n        }\\r\\n\\r\\n        funders = new address[](0);\\r\\n\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success,\\\"Withdraw Failed!\\\");\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return priceFeed;\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(\\r\\n        address fundingAddress\\r\\n    ) public view returns (uint256) {\\r\\n        return addressToAmountFunded[fundingAddress];\\r\\n    }\\r\\n\\r\\n    function getFunders(uint256 index) public view returns (address) {\\r\\n        return funders[index];\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1f2cdde4a36901cbf34277709e3081b0432ae7d0bb61a3c815ac12a84412fcd0\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        // );\\r\\n\\r\\n        (, int256 value, , , ) = priceFeed.latestRoundData();\\r\\n\\r\\n        return uint256(value * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethAmount * ethPrice) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe7afa034e8916b67460e4f432a923889a2ae6e15b4e085f059dd7519e890b18e\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010bc380380620010bc833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c610f3d6200017f600039600081816103810152818161057101526106410152610f3d6000f3fe6080604052600436106100745760003560e01c80633ccfd60b1161004e5780633ccfd60b14610132578063893d20e8146101495780639e87a5cd14610174578063b60d42881461019f57610083565b80630343fb251461008d578063038001c6146100ca5780633a7b6c74146100f557610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af9190610875565b6102e3565b6040516100c191906108bb565b60405180910390f35b3480156100d657600080fd5b506100df61032c565b6040516100ec91906108bb565b60405180910390f35b34801561010157600080fd5b5061011c60048036038101906101179190610902565b610338565b604051610129919061093e565b60405180910390f35b34801561013e57600080fd5b5061014761037f565b005b34801561015557600080fd5b5061015e61063d565b60405161016b919061093e565b60405180910390f35b34801561018057600080fd5b50610189610665565b60405161019691906109b8565b60405180910390f35b6101a76101a9565b005b670de0b6b3a76400006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461068f90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610a30565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da9190610a7f565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b670de0b6b3a764000081565b600080828154811061034d5761034c610ad5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610404576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561048757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161043d575b5050505050905060005b815181101561050c576000600160008484815181106104b3576104b2610ad5565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061050490610b04565b915050610491565b50600067ffffffffffffffff81111561052857610527610b4d565b5b6040519080825280602002602001820160405280156105565781602001602082028036833780820191505090505b506000908051906020019061056c92919061076b565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516105b390610bad565b60006040518083038185875af1925050503d80600081146105f0576040519150601f19603f3d011682016040523d82523d6000602084013e6105f5565b606091505b5050905080610639576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063090610c0e565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008061069b836106cb565b90506000670de0b6b3a764000082866106b49190610c2e565b6106be9190610cb7565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071457600080fd5b505afa158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c9190610d75565b5050509150506402540be400816107639190610df0565b915050919050565b8280548282559060005260206000209081019282156107e4579160200282015b828111156107e35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061078b565b5b5090506107f191906107f5565b5090565b5b8082111561080e5760008160009055506001016107f6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061084282610817565b9050919050565b61085281610837565b811461085d57600080fd5b50565b60008135905061086f81610849565b92915050565b60006020828403121561088b5761088a610812565b5b600061089984828501610860565b91505092915050565b6000819050919050565b6108b5816108a2565b82525050565b60006020820190506108d060008301846108ac565b92915050565b6108df816108a2565b81146108ea57600080fd5b50565b6000813590506108fc816108d6565b92915050565b60006020828403121561091857610917610812565b5b6000610926848285016108ed565b91505092915050565b61093881610837565b82525050565b6000602082019050610953600083018461092f565b92915050565b6000819050919050565b600061097e61097961097484610817565b610959565b610817565b9050919050565b600061099082610963565b9050919050565b60006109a282610985565b9050919050565b6109b281610997565b82525050565b60006020820190506109cd60008301846109a9565b92915050565b600082825260208201905092915050565b7f4469646e27742053656e6420456e6f75676821212e2e00000000000000000000600082015250565b6000610a1a6016836109d3565b9150610a25826109e4565b602082019050919050565b60006020820190508181036000830152610a4981610a0d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8a826108a2565b9150610a95836108a2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aca57610ac9610a50565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b0f826108a2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4257610b41610a50565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b97600083610b7c565b9150610ba282610b87565b600082019050919050565b6000610bb882610b8a565b9150819050919050565b7f5769746864726177204661696c65642100000000000000000000000000000000600082015250565b6000610bf86010836109d3565b9150610c0382610bc2565b602082019050919050565b60006020820190508181036000830152610c2781610beb565b9050919050565b6000610c39826108a2565b9150610c44836108a2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c7d57610c7c610a50565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc2826108a2565b9150610ccd836108a2565b925082610cdd57610cdc610c88565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0781610ce8565b8114610d1257600080fd5b50565b600081519050610d2481610cfe565b92915050565b6000819050919050565b610d3d81610d2a565b8114610d4857600080fd5b50565b600081519050610d5a81610d34565b92915050565b600081519050610d6f816108d6565b92915050565b600080600080600060a08688031215610d9157610d90610812565b5b6000610d9f88828901610d15565b9550506020610db088828901610d4b565b9450506040610dc188828901610d60565b9350506060610dd288828901610d60565b9250506080610de388828901610d15565b9150509295509295909350565b6000610dfb82610d2a565b9150610e0683610d2a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4557610e44610a50565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8257610e81610a50565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ebf57610ebe610a50565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610efc57610efb610a50565b5b82820290509291505056fea2646970667358221220ec8051a3ec5be0c7e63bd5d9da033d89167aa1fe3b3361e8d289c24a15297a0964736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80633ccfd60b1161004e5780633ccfd60b14610132578063893d20e8146101495780639e87a5cd14610174578063b60d42881461019f57610083565b80630343fb251461008d578063038001c6146100ca5780633a7b6c74146100f557610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af9190610875565b6102e3565b6040516100c191906108bb565b60405180910390f35b3480156100d657600080fd5b506100df61032c565b6040516100ec91906108bb565b60405180910390f35b34801561010157600080fd5b5061011c60048036038101906101179190610902565b610338565b604051610129919061093e565b60405180910390f35b34801561013e57600080fd5b5061014761037f565b005b34801561015557600080fd5b5061015e61063d565b60405161016b919061093e565b60405180910390f35b34801561018057600080fd5b50610189610665565b60405161019691906109b8565b60405180910390f35b6101a76101a9565b005b670de0b6b3a76400006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461068f90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610a30565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da9190610a7f565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b670de0b6b3a764000081565b600080828154811061034d5761034c610ad5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610404576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561048757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161043d575b5050505050905060005b815181101561050c576000600160008484815181106104b3576104b2610ad5565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061050490610b04565b915050610491565b50600067ffffffffffffffff81111561052857610527610b4d565b5b6040519080825280602002602001820160405280156105565781602001602082028036833780820191505090505b506000908051906020019061056c92919061076b565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516105b390610bad565b60006040518083038185875af1925050503d80600081146105f0576040519150601f19603f3d011682016040523d82523d6000602084013e6105f5565b606091505b5050905080610639576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063090610c0e565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008061069b836106cb565b90506000670de0b6b3a764000082866106b49190610c2e565b6106be9190610cb7565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071457600080fd5b505afa158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c9190610d75565b5050509150506402540be400816107639190610df0565b915050919050565b8280548282559060005260206000209081019282156107e4579160200282015b828111156107e35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061078b565b5b5090506107f191906107f5565b5090565b5b8082111561080e5760008160009055506001016107f6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061084282610817565b9050919050565b61085281610837565b811461085d57600080fd5b50565b60008135905061086f81610849565b92915050565b60006020828403121561088b5761088a610812565b5b600061089984828501610860565b91505092915050565b6000819050919050565b6108b5816108a2565b82525050565b60006020820190506108d060008301846108ac565b92915050565b6108df816108a2565b81146108ea57600080fd5b50565b6000813590506108fc816108d6565b92915050565b60006020828403121561091857610917610812565b5b6000610926848285016108ed565b91505092915050565b61093881610837565b82525050565b6000602082019050610953600083018461092f565b92915050565b6000819050919050565b600061097e61097961097484610817565b610959565b610817565b9050919050565b600061099082610963565b9050919050565b60006109a282610985565b9050919050565b6109b281610997565b82525050565b60006020820190506109cd60008301846109a9565b92915050565b600082825260208201905092915050565b7f4469646e27742053656e6420456e6f75676821212e2e00000000000000000000600082015250565b6000610a1a6016836109d3565b9150610a25826109e4565b602082019050919050565b60006020820190508181036000830152610a4981610a0d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8a826108a2565b9150610a95836108a2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aca57610ac9610a50565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b0f826108a2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4257610b41610a50565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b97600083610b7c565b9150610ba282610b87565b600082019050919050565b6000610bb882610b8a565b9150819050919050565b7f5769746864726177204661696c65642100000000000000000000000000000000600082015250565b6000610bf86010836109d3565b9150610c0382610bc2565b602082019050919050565b60006020820190508181036000830152610c2781610beb565b9050919050565b6000610c39826108a2565b9150610c44836108a2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c7d57610c7c610a50565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc2826108a2565b9150610ccd836108a2565b925082610cdd57610cdc610c88565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0781610ce8565b8114610d1257600080fd5b50565b600081519050610d2481610cfe565b92915050565b6000819050919050565b610d3d81610d2a565b8114610d4857600080fd5b50565b600081519050610d5a81610d34565b92915050565b600081519050610d6f816108d6565b92915050565b600080600080600060a08688031215610d9157610d90610812565b5b6000610d9f88828901610d15565b9550506020610db088828901610d4b565b9450506040610dc188828901610d60565b9350506060610dd288828901610d60565b9250506080610de388828901610d15565b9150509295509295909350565b6000610dfb82610d2a565b9150610e0683610d2a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4557610e44610a50565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8257610e81610a50565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ebf57610ebe610a50565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610efc57610efb610a50565b5b82820290509291505056fea2646970667358221220ec8051a3ec5be0c7e63bd5d9da033d89167aa1fe3b3361e8d289c24a15297a0964736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}